---
export interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
  text: string;
  title: string;
  imageSrc: string;
  id: string;
}

const { href, title, text, imageSrc, id } = Astro.props;
---

<section class="flex flex-col 2xl:text-2xl">
  <img src={imageSrc} alt="" class="object-contain" />
  <div class="flex flex-col xl:flex-row xl:items-center xl:justify-between xl:gap-4">
    <div>
      <h2 class="mt-3 font-heading font-medium text-[#F0F0F0]">{title}</h2>
      <p>{text}</p>
    </div>
    <a
      id={id}
      target="_blank"
      href={href}
      class="mt-3 w-fit rounded-lg bg-[#321F1F] px-3 py-1 transition-colors duration-1000 2xl:rounded-3xl 2xl:px-8 2xl:py-3"
      >view&nbsp;project</a
    >
  </div>
</section>
<script>
  import { PROJECTS_DATA } from '../config';

  // find all lights
  const lights = document.querySelectorAll<HTMLElement>('.point-light');

  // find all buttons that will change color
  const colorButtons: HTMLElement[] = [];
  PROJECTS_DATA.map((project) => {
    const colorButton = document.getElementById(project.id) as HTMLElement;
    colorButtons.push(colorButton);
  });

  let options = {
    rootMargin: '0px',
    threshold: 1.0,
  };

  let observer = new IntersectionObserver((entries) => {
    const entry = entries[0];
    const elementId = entries[0].target.id;

    const newPointLightColor = PROJECTS_DATA.filter((project) => project.id === elementId)[0].color;
    const newButtonColor = PROJECTS_DATA.filter((project) => project.id === elementId)[0].buttonColor;
    const newTextColor = PROJECTS_DATA.filter((project) => project.id === elementId)[0].buttonTextColor;

    if (!entry.isIntersecting) return;
    for (let light of lights) {
      light.style.backgroundColor = newPointLightColor!;
    }

    for (let button of colorButtons) {
      button.style.backgroundColor = newButtonColor!;
      button.style.color = newTextColor!;
    }
  }, options);

  // get ids from objects and observe them
  PROJECTS_DATA.map((project) => {
    const intersectionElement = document.getElementById(project.id) as HTMLElement;
    observer.observe(intersectionElement);
  });
</script>
